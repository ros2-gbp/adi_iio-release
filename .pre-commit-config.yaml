# To use:
#
#     pre-commit run -a
#
# Or:
#
#     pre-commit install  # (runs every time you commit in git)
#
# To update this file:
#
#     pre-commit autoupdate
#
# NOTE:
#   - Hooks that would modify files are disabled by default (stage = manual).
#   - See Makefile for more details on how to run fixes.
#   - Ament CLI tools are provided by the ROS2 environment.

default_stages: [manual, pre-commit]
repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb", "500"] # default is 500 kB
      - id: check-ast
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-xml
      - id: check-yaml
        args: ["--allow-multiple-documents"]
      - id: debug-statements
        stages: [manual]
      - id: end-of-file-fixer
        stages: [manual]
      - id: mixed-line-ending
        stages: [manual]
      - id: requirements-txt-fixer
        stages: [manual]
      - id: trailing-whitespace
        stages: [manual]
        exclude_types: [rst]
      - id: fix-byte-order-marker
        stages: [manual]

  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: remove-tabs
        stages: [manual]
        args: [--whitespaces-count, '2']  # defaults to: 4

  # Python hooks
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        stages: [manual]
        args: [--py36-plus]

  # # PEP 257
  - repo: local
    hooks:
    - id: ament_pep257
      name: ament_pep257
      description: Format files with pep257.
      entry: ament_pep257
      language: system
      args: ["--ignore=D100,D101,D102,D103,D104,D105,D106,D107,D203,D212,D404"]

  # Alternative: https://github.com/asottile/reorder-python-imports
  - repo: https://github.com/pycqa/isort
    rev: 6.0.0
    hooks:
      - id: isort
        stages: [manual]

  -   repo: https://github.com/hhatto/autopep8
      rev: v2.3.2
      hooks:
      -   id: autopep8
          stages: [manual]

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.2
    hooks:
      - id: flake8
        args: ["--extend-ignore=E501"]

  # PyDocStyle
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        exclude: ^venv/
        args:
          ["--ignore=D100,D101,D102,D103,D104,D105,D106,D107,D203,D212,D404"]

  # CPP hooks

  # Linting tool
  - repo: local
    hooks:
      - id: ament_uncrustify
        name: ament_uncrustify
        description: Format files with uncrustify.
        entry: bash -c './scripts/hooks/run_check_ament_uncrustify.sh'
        language: system
        files: \.(c|cc|cxx|cpp|frag|glsl|h|hpp|hxx|ih|ispc|ipp|java|js|m|proto|vert)$
        verbose: true

  # Static code analysis
  - repo: local
    hooks:
      - id: ament_cppcheck
        name: ament_cppcheck
        description: Static code analysis of C/C++ files.
        entry: env AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS=1 ament_cppcheck
        language: system
        files: \.(h\+\+|h|hh|hxx|hpp|cuh|c|cc|cpp|cu|c\+\+|cxx|tpp|txx)$

  # Maybe use https://github.com/cpplint/cpplint instead
  # Linting tool
  - repo: local
    hooks:
      - id: ament_cpplint
        name: ament_cpplint
        description: Static code analysis check of C/C++ files.
        entry: bash -c './scripts/hooks/run_check_ament_cpplint.sh'
        language: system
        files: \.(h\+\+|h|hh|hxx|hpp|cuh|c|cc|cpp|cu|c\+\+|cxx|tpp|txx)$
        verbose: true

  # Cmake hooks
  # Code style
  - repo: local
    hooks:
      - id: ament_lint_cmake
        name: ament_lint_cmake
        description: Check format of CMakeLists.txt files.
        entry: ament_lint_cmake
        language: system
        files: CMakeLists\.txt$

  # Copyright
  - repo: local
    hooks:
      - id: ament_copyright
        name: ament_copyright
        description: Check if copyright notice is available in all files. Run `make fix-copyright` to fix.
        entry: ament_copyright
        language: system

  # XML
  - repo: local
    hooks:
      - id: ament_xmllint
        name: ament_xmllint
        description: Check if XML files are well-formed.
        entry: ament_xmllint
        language: system
        files: \.xml$

  # Docs - RestructuredText hooks - style checker
  - repo: https://github.com/PyCQA/doc8
    rev: v1.1.2
    hooks:
      - id: doc8
        stages: [manual]
        args: ["--max-line-length=100", "--ignore=D001"]
        exclude: CHANGELOG\.rst$

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      # TBD
      - id: rst-backticks
        exclude: CHANGELOG\.rst$
      - id: rst-directive-colons
      - id: rst-inline-touching-normal

  # Spellcheck in comments and docs
  # skipping of *.svg files is not working...
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        stages: [manual]
        args: ["--write-changes", "--uri-ignore-words-list=ist", "-L manuel"]
        exclude: CHANGELOG\.rst|\.(svg|pyc|drawio)$

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.31.1
    hooks:
      - id: check-github-workflows
        args: ["--verbose"]
      - id: check-github-actions
        args: ["--verbose"]
      - id: check-dependabot
        args: ["--verbose"]
